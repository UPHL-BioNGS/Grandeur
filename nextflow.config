
/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    UPHL-BioNGS/Grandeur Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

params {
  outdir               = "grandeur"

  // Input options
  reads                = null
  fastas               = null
  input                = null
  sample_sheet         = params.input
  fasta_list           = null

  // external files
  kraken2_db           = null
  blast_db             = null
  blast_db_type        = ""
  mash_db              = null
  fastani_ref          = null
  fastani_ref_list     = null

  // for downloading from databases
  sra_accessions       = []
  genome_accessions    = []

  // thresholds and other params
  minimum_reads        = 10000
  datasets_max_genomes = 5
  mash_max_hits        = 25
  min_core_genes       = 1500
  iqtree2_outgroup     = ""

  // subworkflow flags
  current_datasets     = false
  skip_extras          = false
  exclude_top_hit      = false
  msa                  = false

  // specifying the core workflow
  aligner              = 'panaroo'
  annotator            = 'bakta'

  // for qc more than anything
  genome_sizes         = "${baseDir}/assets/genome_sizes.json"

  // the following were stolen from other nf-core workflows and may have no functionality here

  // Boilerplate options
  publish_dir_mode             = 'copy'
  email                        = null
  email_on_fail                = null
  plaintext_email              = false
  monochrome_logs              = false
  hook_url                     = null
  help                         = false
  version                      = false
  pipelines_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/'

  // Config options
  config_profile_name        = null
  config_profile_description = null
  custom_config_version      = 'master'
  custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
  config_profile_contact     = null
  config_profile_url         = null

  // Schema validation default options
  validationFailUnrecognisedParams = false
  validationLenientMode            = false
  validationShowHiddenParams       = false
  validate_params                  = true
}


// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"


//########## Setting Profiles ##########

profiles {
  docker {
    docker.enabled         = true
    conda.enabled          = false
    singularity.enabled    = false
    podman.enabled         = false
    shifter.enabled        = false
    charliecloud.enabled   = false
    apptainer.enabled      = false
    docker.runOptions      = '-u $(id -u):$(id -g)'
    }
  singularity {
    singularity.enabled    = true
    singularity.autoMounts = true
    conda.enabled          = false
    docker.enabled         = false
    podman.enabled         = false
    shifter.enabled        = false
    charliecloud.enabled   = false
    apptainer.enabled      = false
    }
  msa {
    params.msa                    = true
    }
  just_msa {
    params.msa                    = true
    params.skip_extras            = true
    }
  test {
    // default workflow
    params.sra_accessions         = ["SRR11725329", "SRR13643280", "SRR14436834", "SRR14634837", "SRR7738178", "SRR7889058"]
    }
  test0 {
    // default workflow while skipping extras
    params.sra_accessions         = ["SRR11725329", "SRR13643280"]
    params.skip_extras            = true
    }
  test1 {
    // turning on current datasets
    params.sra_accessions         = ["SRR11725329", "SRR13643280", "SRR14436834", "SRR14634837", "SRR7738178", "SRR7889058"]
    params.current_datasets       = true
    }
  test2 {
    // phylogenetic analysis
    params.sra_accessions         = ["SRR22314961", "SRR22314960", "SRR22314959", "SRR22314958" ]
    params.msa                    = true
    }
  test3 {
    // phylogenetic analysis without extras
    params.sra_accessions         = ["SRR22314961", "SRR22314960", "SRR22314959", "SRR22314958" ]
    params.msa                    = true
    params.skip_extras            = true
    }
  test4 {
    // phylogenetic analysis with current datasets
    params.sra_accessions         = ["SRR22314961", "SRR22314960", "SRR22314959", "SRR22314958" ]
    params.msa                    = true
    params.current_datasets       = true
    }
  test5 {
    // phylogenetic analysis and exclude fastani top hit
    params.sra_accessions         = ["SRR22314961", "SRR22314960", "SRR22314959", "SRR22314958" ]
    params.msa                    = true
    params.exclude_top_hit        = true
    }
  test6 {
    // phylogenetic analysis with roary and exclude fastani top hit
    params.sra_accessions         = ["SRR22314961", "SRR22314960", "SRR22314959", "SRR22314958" ]
    params.msa                    = true
    params.exclude_top_hit        = true
    params.aligner                = 'roary'
    }
  uphl {
    includeConfig './conf/UPHL.config'
    }
  test7 {
    // phylogenetic analysis with prokka and exclude fastani top hit
    params.sra_accessions         = ["SRR22314961", "SRR22314960", "SRR22314959", "SRR22314958" ]
    params.msa                    = true
    params.annotator              = 'prokka'
    }
  test8 {
    // phylogenetic analysis with genome accessions
    params.genome_accessions      = ["GCF_900475035.1", "GCF_022869605.1", "GCF_002055535.1", "GCF_004028355.1" ]
    params.msa                    = true
    }

}

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
  name                            = 'UPHL-BioNGS/Grandeur'
  author                          = 'Erin Young'
  homePage                        = 'https://github.com/UPHL-BioNGS/Grandeur'
  mainScript                      = 'main.nf'
  version                         = '4.9.24345'
  defaultBranch                   = 'main'
  description                     = 'Grandeur is short-read de novo assembly pipeline with serotyping.'
  nextflowVersion                 = '!>=24.04.4'
}


//######## nf-core assistance #####
validation {
    help {
        enabled = true
        command = "nextflow run UPHL-BioNGS/Grandeur -profile <docker/singularity/.../institute> --sample_sheet samplesheet.csv --outdir grandeur"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
    }
}


// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'


